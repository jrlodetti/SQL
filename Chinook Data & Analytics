--I downloaded a dataset called chinook, which represents a digital media store and includes tables for artists, albums, media tracks, invoices, and customers.
--The chinook database has a total of 11 tables.

--#1. 
--I displayed customers (full names, customer ID, and country) who are not in the US, by filtering the records in the customers table.

SELECT FirstName, LastName, CustomerId, Country
FROM chinook.customers
WHERE Country != "USA";

--#2.
-- I displayed customers from Brazil, using a filter condition.

SELECT *
FROM chinook.customers
WHERE Country = "Brazil";

--#3.
--I displayed the invoices of customers from Brazil, including the customer's full name, invoice id, date of invoice, and billing country, using an inner join.

SELECT c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingAddress
FROM chinook.customers as c
JOIN chinook.invoices as i
ON c.CustomerId = i.CustomerId
WHERE i.BillingCountry = "Brazil";

--#4.
--I displayed employees who are Sales Agents, using a filter.

SELECT *
FROM chinook.employees
WHERE title LIKE "%ales%agen%";

--#5.
--I displayed unique billing countries from the list of invoices, using the distinct function to return different values.

SELECT DISTINCT BillingCountry
FROM chinook.invoices;

--#6.
--I displayed the invoices associated with each Sales Agent, using a join.

SELECT inv.InvoiceId, emp.LastName, emp.FirstName
FROM chinook.invoices inv
JOIN chinook.customers cust ON inv.CustomerId = cust.CustomerId
JOIN chinook.employees emp ON cust.SupportRepId = emp.EmployeeId;

--#7.
--I displayed Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers, using multiple joins.

SELECT inv.Total, cust.FirstName AS Customer_FirstName, cust.LastName AS Customer_LastName, Country, FirstName AS SalesAgent_FirstName, LastName AS SalesAgent_LastName
FROM chinook.invoices inv
JOIN chinook.customers cust ON inv.CustomerId = cust.CustomerId
JOIN chinook.employees emp ON cust.SupportRepId = emp.EmployeeId
WHERE emp.Title LIKE '%ales%agen%';

--#8.
--I displayed the number of invoices in 2009, using the like operator and associated wildcard.

SELECT COUNT(InvoiceId)
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';

--#9.
--I displayed the total sales for 2009, using between to return values within a given range.

SELECT ROUND(SUM(Total),2)
FROM chinook.Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

--#10.
--I displayed the purchased track name and associated invoice line ID, using a join.

SELECT tr.Name, ite.InvoiceLineId
FROM chinook.tracks tr
JOIN chinook.invoice_items ite
ON tr.TrackId = ite.TrackId;

--#11.
--I displayed the purchased track name and associated invoice line ID, along with artist name, using multiple joins.

SELECT i.InvoiceLineId, t.Name AS TrackName, ar.Name AS ArtistName
FROM chinook.invoice_items i
JOIN chinook.tracks t
ON i.TrackId = t.TrackId
JOIN chinook.albums a
ON t.AlbumId = a.AlbumId
JOIN chinook.artists ar
ON a.ArtistId = ar.ArtistId;

--#12.
--I displayed all tracks by album name, media type, and genre, using multiple joins.

SELECT t.Name AS 'TrackName', a.Title AS 'AlbumTitle', m.Name AS 'MediaType', g.Name AS 'Genre'
FROM chinook.tracks t
JOIN chinook.albums a
ON a.AlbumId = t.AlbumId
JOIN chinook.media_types m
ON m.MediaTypeId = t.MediaTypeId
JOIN chinook.genres g
ON g.GenreId = t.GenreId;

--#13.
--I displayed the total sales made by each sales agent, by aggregating data using joins and grouping the result-set.

SELECT ROUND(SUM(i.Total),2) AS 'Total Sales', e.LastName, e.FirstName
FROM chinook.invoices i
JOIN chinook.customers c
ON i.CustomerId = c.CustomerId
JOIN chinook.employees e
ON c.SupportRepId = e.EmployeeId
GROUP BY e.FirstName;

--#14.
--I displayed the sales agent with the highest total sales in 2009, using multiple joins, aggregate functions, and sorting the result-set.

SELECT e.LastName, e.FirstName, ROUND(SUM(i.Total),2) AS 'Total Sales'
FROM chinook.employees e

JOIN chinook.customers c
ON e.EmployeeId = c.SupportRepId

JOIN chinook.invoices i
ON c.CustomerId = i.CustomerId

WHERE e.Title LIKE '%ales%agen%'
AND i.InvoiceDate LIKE '2009%'

GROUP BY e.FirstName
ORDER BY ROUND(SUM(i.Total),2) DESC
LIMIT 1;
